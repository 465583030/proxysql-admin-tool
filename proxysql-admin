#!/bin/bash
# This script will assist with configuring ProxySQL in combination with Percona XtraDB cluster.
# Version 1.0
###############################################################################################


# Make sure only root can run this script
if [ $(id -u) -ne 0 ]; then
  echo "ERROR: This script must be run as root!" 1>&2
  exit
fi

# Dispay script usage details
usage () {
  echo "Usage: [ options ]"
  echo "Options:"
    echo " --proxysql-user=user_name       User to use when connecting to the ProxySQL service"
    echo " --proxysql-password[=password]  Password to use when connecting to the ProxySQL service"
    echo " --proxysql-port=port_num        Port to use when connecting to the ProxySQL service"
    echo " --proxysql-host=host_name       Hostname to use when connecting to the ProxySQL service"
    echo " --cluster-user=user_name        User to use when connecting to the Percona XTraDB Cluster node"
    echo " --cluster-password[=password]   Password to use when connecting to the Percona XTraDB Cluster node"
    echo " --cluster-port=port_num         Port to use when connecting to the Percona XTraDB Cluster node"
    echo " --cluster-host=host_name        Hostname to use when connecting to the Percona XTraDB Cluster node"
    echo " --enable                        Auto-configure Percona XtraDB Cluster nodes into ProxySQL"
    echo " --disable                       Remove Percona XtraDB Cluster configurations from ProxySQL"
    echo " --galera-check-interval         Interval for monitoring proxysql_galera_checker script(in milliseconds)"
    echo " --mode                          ProxySQL read/write configuration mode, currently it only support 'loadbal' mode" 
}

# Check if we have a functional getopt(1)
if ! getopt --test
  then
  go_out="$(getopt --options= --longoptions=proxysql-user:,proxysql-password::,proxysql-host:,proxysql-port:,cluster-user:,cluster-password::,cluster-host:,cluster-port:,galera-check-interval:,mode:,enable,disable,start,stop,status,help: \
  --name="$(basename "$0")" -- "$@")"
  test $? -eq 0 || exit 1
  eval set -- $go_out
fi

for arg
do
  case "$arg" in
    -- ) shift; break;;
    --proxysql-user )
    proxysql_usr="$2"
    shift 2
    ;;
    --proxysql-password )
    case "$2" in
      "")
      read -s -p "Enter ProxySQL password:" INPUT_PASS
      if [ -z "$INPUT_PASS" ]; then
        proxysql_pass=""
	printf "\nContinuing without ProxySQL password...\n";
      else
        proxysql_pass="$INPUT_PASS"
      fi
      printf "\n"
      ;;
      *)
      proxysql_pass="$2"
      ;;
    esac
    shift 2
    ;;
    --proxysql-host )
    proxysql_hostname="$2"
    shift 2
    ;;
    --proxysql-port )
    proxysql_port="$2"
    shift 2
    ;;
    --cluster-user )
    cluster_usr="$2"
    shift 2
    ;;
    --cluster-password )
    case "$2" in
      "")
      read -s -p "Enter Cluster password:" INPUT_PASS
      if [ -z "$INPUT_PASS" ]; then
        cluster_pass=""
	printf "\nContinuing without Cluster password...\n";
      else
        cluster_pass="-p$INPUT_PASS"
      fi
      printf "\n"
      ;;
      *)
      cluster_pass="-p$2"
      ;;
    esac
    shift 2
    ;;
    --cluster-host )
    cluster_hostname="-h $2"
    shift 2
    ;;
    --cluster-port )
    cluster_port="-P $2"
    shift 2
    ;;
    -e | --enable )
    shift
    enable=1
    ;;
    -d | --disable )
    shift
    disable=1
    ;;
    --galera-check-interval )
    galera_check_interval="$2"
    shift 2
    ;;
    --mode )
    rw_mode="$2"
    shift 2
    ;;
    --help )
    usage
    exit 0
    ;;
  esac
done

if [[ ! -e `which mysql 2> /dev/null` ]] ;then
  echo "mysql client is not found, please install the mysql client package" 
  exit 1
fi

# Check the options gathered from the command line
if [ -z "$proxysql_usr" ];then
  echo "The ProxySQL username is required!"
  usage
  exit 1
fi

if [[ -z "$proxysql_hostname" ]]; then
  proxysql_hostname="-h127.0.0.1"
fi

if [[ -z "$proxysql_port" ]]; then
  proxysql_port="-P6032"
fi

if [ -z "$cluster_usr" ];then
  echo "The Percona XtraDB Cluster username is required!"
  usage
  exit 1
fi

if [[ -z "$cluster_hostname" ]]; then
  cluster_hostname="-hlocalhost"
fi

if [[ -z "$cluster_port" ]]; then
  cluster_port="-P3306"
fi

if [[ -z "$galera_check_interval" ]]; then
  galera_check_interval=3000
fi

if [[ -z "$rw_mode" ]]; then
  rw_mode="loadbal"
elif [[ "$rw_mode" != "loadbal" ]];then
  echo "Alert !For now, the only supported mode is 'loadbal'  which will be the default for a load balanced set of evenly weighted read/write nodes."
  echo "Please run with default mode."
  usage
  exit 1
fi

PIDFILE=/tmp/pxc-proxysql-monitor.pid

proxysql_connection_check(){
  if ! mysql -u$proxysql_usr -p$proxysql_pass -h$proxysql_hostname -P$proxysql_port -e"show tables" >/dev/null 2>/dev/null; then 
    echo "Please enter valid ProxySQL connection parameters! Terminating.."
    exit 1
  fi
}

pxc_connection_check(){
  DSN=" -u$cluster_usr $cluster_pass $cluster_hostname $cluster_port --protocol=tcp"
  if ! mysql $DSN -e"select @@port" >/dev/null 2>/dev/null; then 
    echo "Please enter valid PXC connection parameters! Terminating.."
    exit 1
  fi
}
check_cmd(){
  MPID=$1
  ERROR_MSG=$2
  if [ ${MPID} -ne 0 ]; then echo "Assert! $ERROR_MSG. Terminating!"; exit 1; fi
}

check_proxysql(){
  if ! pidof proxysql >/dev/null ; then
    echo "ProxySQL is not running, please check the error log at /var/lib/proxysql/proxysql.log"
    exit 1
  fi
}

# Auto configure Percona XtraDB Cluster nodes into ProxySQL
enable_proxysql(){
  # Checking proxysql binary location
  if [[ ! -e $(which proxysql 2> /dev/null) ]]; then
    echo "The proxysql binary was not found, please install the ProxySQL package"  
    exit 1
  elif [[ ! -e $(which proxysql_galera_checker 2> /dev/null) ]] ;then
    echo "The proxysql_galera_checker binary was not found, please check ProxySQL package installation"  
    exit 1
  elif [[ ! -e $(which proxysql_node_monitor 2> /dev/null) ]]; then
    echo "The proxysql_node_monitor binary was not found, please check ProxySQL package installation"  
    exit 1
  else
    PROXYSQL=$(which proxysql)
    PROXYSQL_GALERA_CHECK=$(which proxysql_galera_checker)
    PROXYSQL_NODE_MONITOR=$(which proxysql_node_monitor)
  fi
  # Check for existing proxysql process
  if ! pidof proxysql >/dev/null ; then
    echo "ProxySQL is not running; please start proxysql service"
    exit 1
  fi
  proxysql_connection_check

  #creating proxysql-admin.cnf file with proxysql user credentials for checking cluster node membership.
  {
  echo "export proxysql_usr=\"$proxysql_usr\"" 
  echo "export proxysql_pass=\"$proxysql_pass\""
  echo "export proxysql_hostname=\"$proxysql_hostname\""
  echo "export proxysql_port=\"$proxysql_port\"" 
  } > /etc/proxysql-admin.cnf

  chown proxysql.proxysql /etc/proxysql-admin.cnf
  chmod 640 /etc/proxysql-admin.cnf
 
  pxc_connection_check
  echo -e "\nConfiguring ProxySQL monitoring user.."
  echo -n "Enter ProxySQL monitoring username: "
  read mon_uname
  while [[ -z "$mon_uname" ]]
  do
    echo -n "No input entered, Enter ProxySQL monitoring username: "
    read mon_uname
  done

  read -s -p "Enter ProxySQL monitoring password: " mon_password
  while [[ -z "$mon_password" ]]
  do
    read -s -p "No input entered, Enter ProxySQL monitoring password: " mon_password
  done

  check_user=`mysql  $DSN -Bse"SELECT user,host FROM mysql.user where user='$mon_uname' and host='%';" 2>/dev/null`
  if [[ -z "$check_user" ]]; then
    mysql  $DSN -e "GRANT USAGE ON *.* TO $mon_uname@'%' IDENTIFIED BY '$mon_password';" 2>/dev/null
    check_cmd $?  "Cannot create the ProxySQL monitoring user"
    echo "update global_variables set variable_value='$mon_uname' where variable_name='mysql-monitor_username'; update global_variables set variable_value='$mon_password' where variable_name='mysql-monitor_password'; " | mysql -u$proxysql_usr -p$proxysql_pass -h$proxysql_hostname -P$proxysql_port 2>/dev/null
    check_cmd $?  "Cannot set the mysql-monitor variables in ProxySQL"
    echo "LOAD MYSQL VARIABLES TO RUNTIME;SAVE MYSQL VARIABLES TO DISK;" | mysql -u$proxysql_usr -p$proxysql_pass -h$proxysql_hostname -P$proxysql_port 2>/dev/null
    echo -e "\n\nUser $mon_uname@'%' has been added with USAGE privilege\n"
  else
    echo -e "\n\nUser ${mon_uname}@'%' already present in Percona XtraDB Cluster"
  fi

  # Adding Percona XtraDB Cluster nodes to ProxySQL
  echo -e "\nAdding the Percona XtraDB Cluster server nodes to ProxySQL"
  echo "DELETE FROM mysql_servers WHERE hostgroup_id=10" | mysql -u$proxysql_usr -p$proxysql_pass -h$proxysql_hostname -P$proxysql_port 2>/dev/null
  wsrep_address=(`mysql  $DSN -Bse "show status like 'wsrep_incoming_addresses'" 2>/dev/null | awk '{print $2}' | sed 's|,| |g'`)
  for i in "${wsrep_address[@]}"; do	
    ws_ip=`echo $i | cut -d':' -f1`
    ws_port=`echo $i | cut -d':' -f2`
    echo "INSERT INTO mysql_servers (hostname,hostgroup_id,port,weight) VALUES ('$ws_ip',10,$ws_port,1000);" | mysql -u$proxysql_usr -p$proxysql_pass -h$proxysql_hostname -P$proxysql_port 2>/dev/null
    check_cmd $? "Failed to add the Percona XtraDB Cluster server node $ws_ip:$ws_port"
  done
  echo "LOAD MYSQL SERVERS TO RUNTIME; SAVE MYSQL SERVERS TO DISK;" | mysql -u$proxysql_usr -p$proxysql_pass -h$proxysql_hostname -P$proxysql_port 2>/dev/null

  # Adding Percona XtraDB Cluster monitoring scripts

  # Adding proxysql galera check scheduler
  echo "DELETE FROM SCHEDULER WHERE ID=10;" | mysql -u$proxysql_usr -p$proxysql_pass -h$proxysql_hostname -P$proxysql_port 2>/dev/null
  check_cmd $?
  echo "INSERT  INTO SCHEDULER (id,active,interval_ms,filename,arg1,arg2,arg3,arg4,arg5) VALUES (10,1,$galera_check_interval,'$PROXYSQL_GALERA_CHECK',10,10,${#wsrep_address[@]},1,'/var/lib/proxysql/galera-check.log');" | mysql -u$proxysql_usr -p$proxysql_pass -h$proxysql_hostname -P$proxysql_port 2>/dev/null
  check_cmd $? "Failed to add the Percona XtraDB Cluster monitoring scheduler in ProxySQL"

  # Adding Percona XtraDB Cluster membership checking scheduler
  echo "DELETE FROM SCHEDULER WHERE ID=11;" | mysql -u$proxysql_usr -p$proxysql_pass -h$proxysql_hostname -P$proxysql_port 2>/dev/null
  check_cmd $?
  echo "INSERT  INTO SCHEDULER (id,active,interval_ms,filename,arg1,arg2) VALUES (11,1,5000,'$PROXYSQL_NODE_MONITOR',10,'/var/lib/proxysql/proxysql_node_monitor.log');" | mysql -u$proxysql_usr -p$proxysql_pass -h$proxysql_hostname -P$proxysql_port 2>/dev/null
  check_cmd $? "Failed to add the Percona XtraDB Cluster membership checking scheduler in ProxySQL"

  echo "LOAD SCHEDULER TO RUNTIME;SAVE SCHEDULER TO DISK;" | mysql -u$proxysql_usr -p$proxysql_pass -h$proxysql_hostname -P$proxysql_port 2>/dev/null

  echo -e "\nConfiguring Percona XtraDB Cluster user to connect through ProxySQL"
  echo -n "Enter Percona XtraDB Cluster user name: "
  read pxc_uname
  while [[ -z "$pxc_uname" ]]
  do
    echo -n "No input entered, Enter Percona XtraDB Cluster user name: "
    read pxc_uname
  done
  read -s -p "Enter Percona XtraDB Cluster user password: " pxc_password
  while [[ -z "$pxc_password" ]]
  do
    read -s -p "No input entered, Enter Percona XtraDB Cluster user password: " pxc_password
  done
  check_user=`mysql  $DSN -Bse"SELECT user,host FROM mysql.user where user='$pxc_uname' and host='%';" 2>/dev/null`

  if [[ -z "$check_user" ]]; then
    mysql  $DSN -e "GRANT USAGE  ON *.* TO $pxc_uname@'%' IDENTIFIED BY '$pxc_password';" 2>/dev/null
    check_cmd $? "Cannot add Percona XtraDB Cluster user : $pxc_uname (GRANT)"
    echo "INSERT INTO mysql_users (username,password,active,default_hostgroup) values ('$pxc_uname','$pxc_password',1,10);LOAD MYSQL USERS TO RUNTIME;SAVE MYSQL USERS FROM RUNTIME;SAVE MYSQL USERS TO DISK;" | mysql -u$proxysql_usr -p$proxysql_pass -h$proxysql_hostname -P$proxysql_port 2>/dev/null
    check_cmd $? "Cannot add Percona XtraDB Cluster user : $pxc_uname (mysql_users update)"
    echo -e "\n\nUser $pxc_uname@'%' has been added with USAGE privilege, please make sure to grant appropriate privileges\n"
  else
    echo -e "\n\nUser ${pxc_uname}@'%' already present in Percona XtraDB Cluster"
  fi
}

# Removing PXC configuration from proxysql
disable_proxysql(){
  proxysql_connection_check
  echo "DELETE FROM mysql_users WHERE default_hostgroup=10;" | mysql -u$proxysql_usr -p$proxysql_pass -h$proxysql_hostname -P$proxysql_port 2>/dev/null
  check_cmd $? "Cannot delete Percona XtraDB Cluster users from ProxySQL"
  echo "DELETE FROM mysql_servers WHERE hostgroup_id=10;" | mysql -u$proxysql_usr -p$proxysql_pass -h$proxysql_hostname -P$proxysql_port 2>/dev/null
  check_cmd $? "Cannot delete Percona XtraDB Cluster nodes from ProxySQL"
}



if [ "$enable" == 1 -o "$disable" == 1 ]; then
  if [ "$enable" == 1 ];then
    enable_proxysql
    echo "ProxySQL configuration completed!"
  fi
  if [ "$disable" == 1 ];then  
    disable_proxysql
    echo "ProxySQL configuration removed!"
  fi
else
  echo "Usage: proxysql-admin <user credentials> {enable|disable}"
  usage
fi

